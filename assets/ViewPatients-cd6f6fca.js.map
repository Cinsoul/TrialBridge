{"version":3,"file":"ViewPatients-cd6f6fca.js","sources":["../../src/pages/trial-team/ViewPatients.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Button, Row, Col, Table, Tag, Space, Input, message } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowLeftOutlined, SearchOutlined } from '@ant-design/icons';\nimport { authService } from '../../services/authService';\nimport { patientService } from '../../services/patientService';\nimport type { PatientProfile } from '../../services/patientService';\n\nconst { Title } = Typography;\n\nconst ViewPatients: React.FC = () => {\n  const navigate = useNavigate();\n  const currentUser = authService.getCurrentUser();\n  const [patients, setPatients] = useState<PatientProfile[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchText, setSearchText] = useState('');\n\n  // Check if user is logged in\n  useEffect(() => {\n    if (!currentUser || currentUser.role !== 'trialTeam') {\n      navigate('/trial-team/login');\n    }\n  }, [currentUser, navigate]);\n\n  // Fetch patients data\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await patientService.getAllPatients();\n        if (response.success) {\n          setPatients(response.patients || []);\n        } else {\n          message.error('Failed to load patients');\n        }\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n        message.error('An error occurred while loading patients');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPatients();\n  }, []);\n\n  const handleBackToDashboard = () => {\n    navigate('/trial-team/dashboard');\n  };\n\n  const handleSearch = (value: string) => {\n    setSearchText(value);\n  };\n\n  const filteredPatients = patients.filter(patient => \n    patient.name.toLowerCase().includes(searchText.toLowerCase()) ||\n    patient.email.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text: string) => <a>{text}</a>,\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n    },\n    {\n      title: 'Gender',\n      dataIndex: 'gender',\n      key: 'gender',\n      render: (gender: string) => gender.charAt(0).toUpperCase() + gender.slice(1),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone',\n      key: 'phone',\n    },\n    {\n      title: 'Medical Conditions',\n      dataIndex: 'medicalHistory',\n      key: 'conditions',\n      render: (medicalHistory: any) => (\n        <Space size=\"small\" wrap>\n          {medicalHistory.conditions.map((condition: string, index: number) => (\n            <Tag color=\"blue\" key={index}>\n              {condition}\n            </Tag>\n          ))}\n        </Space>\n      ),\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: () => (\n        <Space size=\"small\">\n          <Button type=\"link\">View Details</Button>\n          <Button type=\"link\">Enroll in Trial</Button>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <Row align=\"middle\" style={{ marginBottom: '24px' }}>\n        <Button \n          icon={<ArrowLeftOutlined />} \n          onClick={handleBackToDashboard}\n          style={{ marginRight: '16px' }}\n        >\n          Back\n        </Button>\n        <Title level={2} style={{ margin: 0 }}>Enrolled Patients</Title>\n      </Row>\n\n      <Row justify=\"end\" style={{ marginBottom: '16px' }}>\n        <Col span={6}>\n          <Input\n            placeholder=\"Search by name or email\"\n            prefix={<SearchOutlined />}\n            onChange={e => handleSearch(e.target.value)}\n            allowClear\n          />\n        </Col>\n      </Row>\n\n      <Table \n        columns={columns} \n        dataSource={filteredPatients} \n        rowKey=\"email\" \n        loading={loading}\n        pagination={{ pageSize: 10 }}\n      />\n    </div>\n  );\n};\n\nexport default ViewPatients;"],"names":["Title","Typography","ViewPatients","navigate","useNavigate","currentUser","authService","getCurrentUser","patients","setPatients","useState","loading","setLoading","searchText","setSearchText","useEffect","role","async","response","patientService","getAllPatients","success","message","error","filteredPatients","filter","patient","name","toLowerCase","includes","email","columns","title","dataIndex","key","render","text","jsx","children","gender","charAt","toUpperCase","slice","medicalHistory","Space","size","wrap","conditions","map","condition","index","Tag","color","jsxs","Button","type","style","padding","Row","align","marginBottom","jsxRuntimeExports","icon","ArrowLeftOutlined","onClick","marginRight","level","margin","justify","Col","span","Input","placeholder","prefix","SearchOutlined","onChange","e","handleSearch","value","target","allowClear","Table","dataSource","rowKey","pagination","pageSize"],"mappings":"iTAQA,MAAMA,MAAEA,GAAUC,EAEZC,EAAyB,KAC7B,MAAMC,EAAWC,IACXC,EAAcC,EAAYC,kBACzBC,EAAUC,GAAeC,EAAAA,SAA2B,KACpDC,EAASC,GAAcF,YAAS,IAChCG,EAAYC,GAAiBJ,WAAS,IAG7CK,EAAAA,WAAU,KACHV,GAAoC,cAArBA,EAAYW,MAC9Bb,EAAS,oBACX,GACC,CAACE,EAAaF,IAGjBY,EAAAA,WAAU,KACcE,WAChB,IACI,MAAAC,QAAiBC,EAAeC,iBAClCF,EAASG,QACCZ,EAAAS,EAASV,UAAY,IAEjCc,EAAQC,MAAM,iCAETA,GAEPD,EAAQC,MAAM,2CAA0C,CACxD,QACAX,GAAW,EACb,QAID,IAEH,MAQMY,EAAmBhB,EAASiB,WAChCC,EAAQC,KAAKC,cAAcC,SAAShB,EAAWe,gBAC/CF,EAAQI,MAAMF,cAAcC,SAAShB,EAAWe,iBAG5CG,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAASC,GAAiBC,EAAAA,IAAC,KAAGC,SAAKF,KAErC,CACEJ,MAAO,MACPC,UAAW,MACXC,IAAK,OAEP,CACEF,MAAO,SACPC,UAAW,SACXC,IAAK,SACLC,OAASI,GAAmBA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,IAE5E,CACEV,MAAO,QACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,QACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,qBACPC,UAAW,iBACXC,IAAK,aACLC,OAASQ,GACPN,EAAAA,IAACO,GAAMC,KAAK,QAAQC,MAAI,EACrBR,SAAeK,EAAAI,WAAWC,KAAI,CAACC,EAAmBC,IAChDb,EAAAA,IAAAc,EAAA,CAAIC,MAAM,OACRd,SAAAW,GADoBC,QAO/B,CACElB,MAAO,UACPE,IAAK,UACLC,OAAQ,IACLkB,EAAAA,KAAAT,EAAA,CAAMC,KAAK,QACVP,SAAA,CAACD,EAAAA,IAAAiB,EAAA,CAAOC,KAAK,OAAOjB,SAAY,iBAC/BD,EAAAA,IAAAiB,EAAA,CAAOC,KAAK,OAAOjB,SAAe,uCAOxC,MAAI,CAAAkB,MAAO,CAAEC,QAAS,QACrBnB,SAAA,CAAAe,OAACK,GAAIC,MAAM,SAASH,MAAO,CAAEI,aAAc,QACzCtB,SAAA,CAAAuB,EAAAxB,IAACiB,EAAA,CACCQ,WAAOC,EAAkB,IACzBC,QAxEsB,KAC5B7D,EAAS,wBAAuB,EAwE1BqD,MAAO,CAAES,YAAa,QACvB3B,SAAA,SAGDD,EAAAA,IAACrC,GAAMkE,MAAO,EAAGV,MAAO,CAAEW,OAAQ,GAAK7B,SAAiB,2BAGzDD,IAAAqB,EAAA,CAAIU,QAAQ,MAAMZ,MAAO,CAAEI,aAAc,QACxCtB,WAAAD,IAACgC,EAAI,CAAAC,KAAM,EACThC,SAAAuB,EAAAxB,IAACkC,EAAA,CACCC,YAAY,0BACZC,aAASC,EAAe,IACxBC,SAAUC,IAAKC,OAjFHC,EAiFgBF,EAAEG,OAAOD,WAhF7ChE,EAAcgE,GADK,IAACA,CAiF8B,EAC1CE,YAAU,QAKhBnB,EAAAxB,IAAC4C,EAAA,CACClD,UACAmD,WAAY1D,EACZ2D,OAAO,QACPxE,UACAyE,WAAY,CAAEC,SAAU,QAE5B"}