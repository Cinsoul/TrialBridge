{"version":3,"file":"FindTrials-ee55ef1f.js","sources":["../../src/pages/patient/FindTrials.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Card, Button, Row, Col, List, Tag, Input, Select, Spin, Space, message } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { SearchOutlined, ArrowLeftOutlined } from '@ant-design/icons';\nimport { authService } from '../../services/authService';\nimport { trialService } from '../../services/trialService';\nimport type { Trial } from '../../services/trialService';\n\nconst { Title, Text, Paragraph } = Typography;\nconst { Option } = Select;\n\nconst FindTrials: React.FC = () => {\n  const navigate = useNavigate();\n  const currentUser = authService.getCurrentUser();\n  const [trials, setTrials] = useState<Trial[]>([]);\n  const [filteredTrials, setFilteredTrials] = useState<Trial[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n\n  // Check if user is logged in\n  useEffect(() => {\n    if (!currentUser || currentUser.role !== 'patient') {\n      navigate('/patient/login');\n    }\n  }, [currentUser, navigate]);\n\n  // Fetch trials data\n  useEffect(() => {\n    const fetchTrials = async () => {\n      try {\n        const response = await trialService.getAllTrials();\n        if (response.success) {\n          setTrials(response.trials);\n          setFilteredTrials(response.trials);\n        } else {\n          message.error('Failed to load clinical trials');\n        }\n      } catch (error) {\n        console.error('Error fetching trials:', error);\n        message.error('An error occurred while loading trials');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrials();\n  }, []);\n\n  // Filter trials based on search term and status\n  useEffect(() => {\n    let result = trials;\n    \n    // Filter by status\n    if (statusFilter !== 'all') {\n      result = result.filter(trial => trial.status === statusFilter);\n    }\n    \n    // Filter by search term\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      result = result.filter(trial => \n        trial.title.toLowerCase().includes(term) || \n        trial.description.toLowerCase().includes(term) ||\n        trial.location.toLowerCase().includes(term)\n      );\n    }\n    \n    setFilteredTrials(result);\n  }, [searchTerm, statusFilter, trials]);\n\n  const handleApply = async (trialId: string) => {\n    if (!currentUser?.email) {\n      message.error('You must be logged in to apply');\n      return;\n    }\n    \n    try {\n      const response = await trialService.applyForTrial(currentUser.email, trialId);\n      if (response.success) {\n        message.success('Application submitted successfully!');\n      } else {\n        message.error(response.message || 'Failed to submit application');\n      }\n    } catch (error) {\n      console.error('Error applying for trial:', error);\n      message.error('An error occurred while submitting your application');\n    }\n  };\n\n  const handleBackToDashboard = () => {\n    navigate('/patient/dashboard');\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'recruiting':\n        return 'green';\n      case 'active':\n        return 'blue';\n      case 'completed':\n        return 'gray';\n      default:\n        return 'default';\n    }\n  };\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <Row align=\"middle\" style={{ marginBottom: '24px' }}>\n        <Button \n          icon={<ArrowLeftOutlined />} \n          onClick={handleBackToDashboard}\n          style={{ marginRight: '16px' }}\n        >\n          Back\n        </Button>\n        <Title level={2} style={{ margin: 0 }}>Find Clinical Trials</Title>\n      </Row>\n\n      <Row gutter={[16, 16]} style={{ marginBottom: '24px' }}>\n        <Col span={16}>\n          <Input \n            placeholder=\"Search by title, description, or location\" \n            prefix={<SearchOutlined />}\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n            size=\"large\"\n          />\n        </Col>\n        <Col span={8}>\n          <Select\n            style={{ width: '100%' }}\n            placeholder=\"Filter by status\"\n            value={statusFilter}\n            onChange={value => setStatusFilter(value)}\n            size=\"large\"\n          >\n            <Option value=\"all\">All Statuses</Option>\n            <Option value=\"recruiting\">Recruiting</Option>\n            <Option value=\"active\">Active</Option>\n            <Option value=\"completed\">Completed</Option>\n          </Select>\n        </Col>\n      </Row>\n\n      {loading ? (\n        <div style={{ textAlign: 'center', padding: '50px' }}>\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <List\n          grid={{ gutter: 16, column: 1 }}\n          dataSource={filteredTrials}\n          locale={{ emptyText: 'No clinical trials found' }}\n          renderItem={trial => (\n            <List.Item>\n              <Card>\n                <Row justify=\"space-between\" align=\"middle\">\n                  <Col>\n                    <Title level={4}>{trial.title}</Title>\n                    <Tag color={getStatusColor(trial.status)}>\n                      {trial.status.charAt(0).toUpperCase() + trial.status.slice(1)}\n                    </Tag>\n                  </Col>\n                  <Col>\n                    <Button \n                      type=\"primary\" \n                      onClick={() => handleApply(trial.id)}\n                      disabled={trial.status !== 'recruiting'}\n                    >\n                      Apply Now\n                    </Button>\n                  </Col>\n                </Row>\n                <Paragraph>{trial.description}</Paragraph>\n                <Space direction=\"vertical\">\n                  <Text strong>Location:</Text>\n                  <Text>{trial.location}</Text>\n                  <Text strong>Duration:</Text>\n                  <Text>{trial.startDate} to {trial.endDate}</Text>\n                  <Text strong>Compensation:</Text>\n                  <Text>{trial.compensation}</Text>\n                  <Text strong>Contact:</Text>\n                  <Text>{trial.contactEmail} | {trial.contactPhone}</Text>\n                </Space>\n              </Card>\n            </List.Item>\n          )}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default FindTrials;"],"names":["Title","Text","Paragraph","Typography","Option","Select","FindTrials","navigate","useNavigate","currentUser","authService","getCurrentUser","trials","setTrials","useState","filteredTrials","setFilteredTrials","loading","setLoading","searchTerm","setSearchTerm","statusFilter","setStatusFilter","useEffect","role","async","response","trialService","getAllTrials","success","message","error","result","filter","trial","status","term","toLowerCase","title","includes","description","location","getStatusColor","style","padding","children","jsxs","Row","align","marginBottom","jsxRuntimeExports","jsx","Button","icon","ArrowLeftOutlined","onClick","marginRight","level","margin","gutter","Col","span","Input","placeholder","prefix","SearchOutlined","value","onChange","e","target","size","width","textAlign","Spin","List","grid","column","dataSource","locale","emptyText","renderItem","Item","Card","justify","Tag","color","charAt","toUpperCase","slice","type","trialId","email","applyForTrial","handleApply","id","disabled","Space","direction","strong","startDate","endDate","compensation","contactEmail","contactPhone"],"mappings":"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"}