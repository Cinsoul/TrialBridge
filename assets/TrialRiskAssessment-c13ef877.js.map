{"version":3,"file":"TrialRiskAssessment-c13ef877.js","sources":["../../src/pages/patient/TrialRiskAssessment.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Typography, Card, Form, Input, Select, Button, Row, Col, Steps, Result, Space, Alert, Statistic } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowLeftOutlined, SafetyOutlined, FileTextOutlined } from '@ant-design/icons';\nimport { authService } from '../../services/authService';\nimport { patientService } from '../../services/patientService';\nimport type { Trial } from '../../services/trialService';\n\nconst { Title, Paragraph } = Typography;\nconst { Option } = Select;\nconst { Step } = Steps;\n\ninterface RiskAssessmentProps {\n  trial?: Trial;\n  onComplete?: (result: RiskAssessmentResult) => void;\n  standalone?: boolean;\n}\n\nexport interface RiskAssessmentResult {\n  score: number;\n  recommendation: string;\n  riskLevel: 'low' | 'moderate' | 'high';\n  matchPercentage: number;\n}\n\nconst TrialRiskAssessment: React.FC<RiskAssessmentProps> = ({ trial, onComplete, standalone = true }) => {\n  const navigate = useNavigate();\n  const currentUser = authService.getCurrentUser();\n  const [form] = Form.useForm();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [assessmentResult, setAssessmentResult] = useState<RiskAssessmentResult | null>(null);\n  const [healthDataImported, setHealthDataImported] = useState(false);\n\n  // Check if user is logged in\n  React.useEffect(() => {\n    if (!currentUser || currentUser.role !== 'patient') {\n      navigate('/patient/login');\n    }\n  }, [currentUser, navigate]);\n\n  const handleBack = () => {\n    if (standalone) {\n      navigate(-1);\n    }\n  };\n\n  const handleImportHealthData = async () => {\n    try {\n      // In a real app, this would fetch the patient's health data\n      const response = await patientService.getPatientProfile(currentUser?.email || '');\n      if (response.success) {\n        const medicalHistory = response.profile?.medicalHistory;\n        \n        // Pre-fill the form with imported health data\n        form.setFieldsValue({\n          conditions: medicalHistory?.conditions?.join(', ') || '',\n          medications: medicalHistory?.medications?.join(', ') || '',\n          allergies: medicalHistory?.allergies?.join(', ') || '',\n          familyHistory: medicalHistory?.familyHistory?.join(', ') || ''\n        });\n        \n        setHealthDataImported(true);\n      }\n    } catch (error) {\n      console.error('Error importing health data:', error);\n    }\n  };\n\n  const handleNext = () => {\n    form.validateFields().then(() => {\n      setCurrentStep(currentStep + 1);\n    });\n  };\n\n  const handlePrevious = () => {\n    setCurrentStep(currentStep - 1);\n  };\n\n  const handleSubmit = () => {\n    form.validateFields().then(() => {\n      // In a real app, this would calculate a risk score based on the form data\n      // and the specific trial requirements\n      \n      // Mock assessment result\n      const result: RiskAssessmentResult = {\n        score: 85,\n        recommendation: 'Based on your health profile, you appear to be a good candidate for this trial. However, please consult with your healthcare provider before proceeding.',\n        riskLevel: 'low',\n        matchPercentage: 85\n      };\n      \n      setAssessmentResult(result);\n      setCurrentStep(currentStep + 1);\n      \n      if (onComplete) {\n        onComplete(result);\n      }\n    });\n  };\n\n  const steps = [\n    {\n      title: 'Health Profile',\n      content: (\n        <>\n          <Alert\n            message=\"Your information is secure\"\n            description=\"The health information you provide is encrypted and will only be used for assessing your eligibility and potential risks for clinical trials.\"\n            type=\"info\"\n            showIcon\n            style={{ marginBottom: 24 }}\n          />\n          \n          <Row justify=\"end\" style={{ marginBottom: 16 }}>\n            <Button \n              type=\"primary\" \n              icon={<FileTextOutlined />} \n              onClick={handleImportHealthData}\n              disabled={healthDataImported}\n            >\n              {healthDataImported ? 'Health Data Imported' : 'Import My Health Data'}\n            </Button>\n          </Row>\n          \n          <Form.Item\n            name=\"conditions\"\n            label=\"Medical Conditions\"\n            rules={[{ required: true, message: 'Please enter your medical conditions' }]}\n          >\n            <Input.TextArea \n              placeholder=\"List any diagnosed medical conditions (e.g., diabetes, hypertension)\"\n              rows={3}\n            />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"medications\"\n            label=\"Current Medications\"\n            rules={[{ required: true, message: 'Please enter your current medications' }]}\n          >\n            <Input.TextArea \n              placeholder=\"List all medications you are currently taking\"\n              rows={3}\n            />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"allergies\"\n            label=\"Allergies\"\n            rules={[{ required: true, message: 'Please enter your allergies' }]}\n          >\n            <Input.TextArea \n              placeholder=\"List any allergies to medications, foods, or other substances\"\n              rows={2}\n            />\n          </Form.Item>\n          \n          <Form.Item\n            name=\"familyHistory\"\n            label=\"Family Medical History\"\n            rules={[{ required: true, message: 'Please enter your family medical history' }]}\n          >\n            <Input.TextArea \n              placeholder=\"List relevant family medical history\"\n              rows={2}\n            />\n          </Form.Item>\n        </>\n      ),\n    },\n    {\n      title: 'Lifestyle Factors',\n      content: (\n        <>\n          <Form.Item\n            name=\"smoking\"\n            label=\"Smoking Status\"\n            rules={[{ required: true, message: 'Please select your smoking status' }]}\n          >\n            <Select placeholder=\"Select your smoking status\">\n              <Option value=\"never\">Never smoked</Option>\n              <Option value=\"former\">Former smoker</Option>\n              <Option value=\"current\">Current smoker</Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"alcohol\"\n            label=\"Alcohol Consumption\"\n            rules={[{ required: true, message: 'Please select your alcohol consumption' }]}\n          >\n            <Select placeholder=\"Select your alcohol consumption\">\n              <Option value=\"none\">None</Option>\n              <Option value=\"occasional\">Occasional (1-2 drinks per week)</Option>\n              <Option value=\"moderate\">Moderate (3-7 drinks per week)</Option>\n              <Option value=\"heavy\">Heavy (8+ drinks per week)</Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"exercise\"\n            label=\"Physical Activity Level\"\n            rules={[{ required: true, message: 'Please select your physical activity level' }]}\n          >\n            <Select placeholder=\"Select your physical activity level\">\n              <Option value=\"sedentary\">Sedentary (little to no exercise)</Option>\n              <Option value=\"light\">Light (1-3 days per week)</Option>\n              <Option value=\"moderate\">Moderate (3-5 days per week)</Option>\n              <Option value=\"active\">Active (6-7 days per week)</Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"diet\"\n            label=\"Diet Description\"\n            rules={[{ required: true, message: 'Please describe your diet' }]}\n          >\n            <Input.TextArea \n              placeholder=\"Briefly describe your typical diet\"\n              rows={3}\n            />\n          </Form.Item>\n        </>\n      ),\n    },\n    {\n      title: 'Trial-Specific Questions',\n      content: (\n        <>\n          <Paragraph>\n            These questions are specific to {trial?.title || 'the selected clinical trial'}. Your answers help us assess your eligibility and potential risks.\n          </Paragraph>\n          \n          <Form.Item\n            name=\"previousTrials\"\n            label=\"Previous Clinical Trial Participation\"\n            rules={[{ required: true, message: 'Please select an option' }]}\n          >\n            <Select placeholder=\"Have you participated in clinical trials before?\">\n              <Option value=\"yes\">Yes</Option>\n              <Option value=\"no\">No</Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"availability\"\n            label=\"Availability for Trial Visits\"\n            rules={[{ required: true, message: 'Please select your availability' }]}\n          >\n            <Select placeholder=\"Select your availability for trial visits\">\n              <Option value=\"weekdays\">Weekdays only</Option>\n              <Option value=\"weekends\">Weekends only</Option>\n              <Option value=\"both\">Both weekdays and weekends</Option>\n              <Option value=\"limited\">Limited availability</Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"transportation\"\n            label=\"Transportation to Trial Site\"\n            rules={[{ required: true, message: 'Please select an option' }]}\n          >\n            <Select placeholder=\"Do you have reliable transportation to the trial site?\">\n              <Option value=\"yes\">Yes</Option>\n              <Option value=\"no\">No</Option>\n              <Option value=\"sometimes\">Sometimes</Option>\n            </Select>\n          </Form.Item>\n          \n          <Form.Item\n            name=\"concerns\"\n            label=\"Concerns or Questions\"\n          >\n            <Input.TextArea \n              placeholder=\"List any concerns or questions you have about participating in this trial\"\n              rows={3}\n            />\n          </Form.Item>\n        </>\n      ),\n    },\n    {\n      title: 'Results',\n      content: assessmentResult ? (\n        <Result\n          status={assessmentResult.riskLevel === 'low' ? 'success' : 'warning'}\n          title={`Risk Assessment Complete - ${assessmentResult.matchPercentage}% Match`}\n          subTitle={assessmentResult.recommendation}\n          extra={[\n            <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n              <Card title=\"Risk Assessment Summary\">\n                <Row gutter={[16, 16]}>\n                  <Col span={8}>\n                    <Statistic \n                      title=\"Risk Level\" \n                      value={assessmentResult.riskLevel.charAt(0).toUpperCase() + assessmentResult.riskLevel.slice(1)} \n                      valueStyle={{ color: assessmentResult.riskLevel === 'low' ? '#3f8600' : assessmentResult.riskLevel === 'moderate' ? '#faad14' : '#cf1322' }}\n                    />\n                  </Col>\n                  <Col span={8}>\n                    <Statistic \n                      title=\"Match Score\" \n                      value={assessmentResult.score} \n                      suffix=\"/100\"\n                    />\n                  </Col>\n                  <Col span={8}>\n                    <Statistic \n                      title=\"Compatibility\" \n                      value={assessmentResult.matchPercentage} \n                      suffix=\"%\"\n                      valueStyle={{ color: '#3f8600' }}\n                    />\n                  </Col>\n                </Row>\n              </Card>\n              \n              <Alert\n                message=\"Next Steps\"\n                description=\"We recommend discussing these results with your healthcare provider before proceeding with the trial application.\"\n                type=\"info\"\n                showIcon\n              />\n              \n              {standalone && (\n                <Button type=\"primary\" onClick={() => navigate('/patient/find-trials')}>\n                  Return to Trial Search\n                </Button>\n              )}\n            </Space>\n          ]}\n        />\n      ) : null,\n    },\n  ];\n\n  return (\n    <div style={{ padding: '24px' }}>\n      {standalone && (\n        <Row align=\"middle\" style={{ marginBottom: '24px' }}>\n          <Button \n            icon={<ArrowLeftOutlined />} \n            onClick={handleBack}\n            style={{ marginRight: '16px' }}\n          >\n            Back\n          </Button>\n          <Title level={2} style={{ margin: 0 }}>\n            <SafetyOutlined style={{ marginRight: 8 }} />\n            Trial Risk Assessment\n          </Title>\n        </Row>\n      )}\n\n      <Card>\n        <Steps current={currentStep} style={{ marginBottom: 24 }}>\n          {steps.map(item => (\n            <Step key={item.title} title={item.title} />\n          ))}\n        </Steps>\n\n        <Form\n          form={form}\n          layout=\"vertical\"\n          requiredMark=\"optional\"\n        >\n          <div>{steps[currentStep].content}</div>\n\n          {currentStep < steps.length - 1 && (\n            <div style={{ marginTop: 24, display: 'flex', justifyContent: 'space-between' }}>\n              {currentStep > 0 && (\n                <Button onClick={handlePrevious}>\n                  Previous\n                </Button>\n              )}\n              <div style={{ flex: '1 1 0' }} />\n              <Button type=\"primary\" onClick={currentStep === steps.length - 2 ? handleSubmit : handleNext}>\n                {currentStep === steps.length - 2 ? 'Submit' : 'Next'}\n              </Button>\n            </div>\n          )}\n        </Form>\n      </Card>\n    </div>\n  );\n};\n\nexport default TrialRiskAssessment;"],"names":["Title","Paragraph","Typography","Option","Select","Step","Steps","TrialRiskAssessment","trial","onComplete","standalone","navigate","useNavigate","currentUser","authService","getCurrentUser","form","Form","useForm","currentStep","setCurrentStep","useState","assessmentResult","setAssessmentResult","healthDataImported","setHealthDataImported","React","useEffect","role","steps","title","content","jsxRuntimeExports","jsxs","Fragment","children","jsx","Alert","message","description","type","showIcon","style","marginBottom","Row","justify","Button","icon","FileTextOutlined","onClick","async","response","patientService","getPatientProfile","email","success","medicalHistory","_a","profile","setFieldsValue","conditions","_b","join","medications","_c","allergies","_d","familyHistory","_e","error","disabled","Item","name","label","rules","required","Input","TextArea","placeholder","rows","value","Result","status","riskLevel","matchPercentage","subTitle","recommendation","extra","Space","direction","size","width","Card","gutter","Col","span","Statistic","charAt","toUpperCase","slice","valueStyle","color","score","suffix","padding","align","ArrowLeftOutlined","marginRight","level","margin","SafetyOutlined","current","map","item","layout","requiredMark","length","marginTop","display","justifyContent","flex","validateFields","then","result"],"mappings":"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"}