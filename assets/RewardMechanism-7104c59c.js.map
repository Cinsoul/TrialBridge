{"version":3,"file":"RewardMechanism-7104c59c.js","sources":["../../src/pages/patient/RewardMechanism.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Card, Button, Row, Col, Progress, List, Tag, Tabs, Statistic, Steps, Divider, Modal, Alert } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowLeftOutlined, TrophyOutlined, GiftOutlined, MedicineBoxOutlined, HeartOutlined, DollarOutlined } from '@ant-design/icons';\nimport { authService } from '../../services/authService';\n\nconst { Title, Text, Paragraph } = Typography;\nconst { TabPane } = Tabs;\nconst { Step } = Steps;\n\ninterface Reward {\n  id: string;\n  title: string;\n  description: string;\n  type: 'medical' | 'financial' | 'service';\n  pointsRequired: number;\n  available: boolean;\n  expiryDate?: string;\n}\n\ninterface Achievement {\n  id: string;\n  title: string;\n  description: string;\n  completed: boolean;\n  pointsAwarded: number;\n  dateCompleted?: string;\n}\n\nconst RewardMechanism: React.FC = () => {\n  const navigate = useNavigate();\n  const currentUser = authService.getCurrentUser();\n  const [userPoints, setUserPoints] = useState(350);\nconst totalPointsEarned = 450;\nconst nextLevelPoints = 500;\nconst userLevel = 2;\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedReward, setSelectedReward] = useState<Reward | null>(null);\n  const [redeemLoading, setRedeemLoading] = useState(false);\n\n  // Check if user is logged in\n  useEffect(() => {\n    if (!currentUser || currentUser.role !== 'patient') {\n      navigate('/patient/login');\n    }\n  }, [currentUser, navigate]);\n\n  const handleBackToDashboard = () => {\n    navigate('/patient/dashboard');\n  };\n\n  const showRewardDetails = (reward: Reward) => {\n    setSelectedReward(reward);\n    setIsModalVisible(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalVisible(false);\n    setSelectedReward(null);\n  };\n\n  const handleRedeemReward = async () => {\n    if (!selectedReward) return;\n    \n    setRedeemLoading(true);\n    try {\n      // In a real app, this would call an API to redeem the reward\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Update points after redeeming\n      setUserPoints(prev => prev - selectedReward.pointsRequired);\n      \n      // Close modal\n      setIsModalVisible(false);\n      setSelectedReward(null);\n    } catch (error) {\n      console.error('Error redeeming reward:', error);\n    } finally {\n      setRedeemLoading(false);\n    }\n  };\n\n  // Mock rewards data\n  const rewards: Reward[] = [\n    {\n      id: 'reward-001',\n      title: 'Free Health Checkup',\n      description: 'Complete physical examination with basic lab tests included.',\n      type: 'medical',\n      pointsRequired: 200,\n      available: true,\n      expiryDate: '2023-12-31'\n    },\n    {\n      id: 'reward-002',\n      title: 'Specialist Consultation',\n      description: 'One-time consultation with a specialist of your choice.',\n      type: 'medical',\n      pointsRequired: 350,\n      available: true,\n      expiryDate: '2023-12-31'\n    },\n    {\n      id: 'reward-003',\n      title: 'Prescription Discount',\n      description: '20% discount on your next prescription medication purchase.',\n      type: 'medical',\n      pointsRequired: 150,\n      available: true,\n      expiryDate: '2023-12-31'\n    },\n    {\n      id: 'reward-004',\n      title: 'Gift Card',\n      description: '$25 gift card for pharmacy purchases.',\n      type: 'financial',\n      pointsRequired: 250,\n      available: true,\n      expiryDate: '2023-12-31'\n    },\n    {\n      id: 'reward-005',\n      title: 'Transportation Credit',\n      description: '$30 credit for transportation to and from medical appointments.',\n      type: 'service',\n      pointsRequired: 300,\n      available: true,\n      expiryDate: '2023-12-31'\n    },\n    {\n      id: 'reward-006',\n      title: 'Premium Health Tracker',\n      description: 'Access to premium features in the health tracking app for 3 months.',\n      type: 'service',\n      pointsRequired: 400,\n      available: true,\n      expiryDate: '2023-12-31'\n    },\n    {\n      id: 'reward-007',\n      title: 'Dental Checkup',\n      description: 'Free dental examination and cleaning.',\n      type: 'medical',\n      pointsRequired: 450,\n      available: true,\n      expiryDate: '2023-12-31'\n    },\n    {\n      id: 'reward-008',\n      title: 'Nutrition Consultation',\n      description: 'One-hour session with a registered dietitian.',\n      type: 'medical',\n      pointsRequired: 300,\n      available: true,\n      expiryDate: '2023-12-31'\n    }\n  ];\n\n  // Mock achievements data\n  const achievements: Achievement[] = [\n    {\n      id: 'achievement-001',\n      title: 'Profile Completion',\n      description: 'Complete your health profile with all required information.',\n      completed: true,\n      pointsAwarded: 50,\n      dateCompleted: '2023-05-10'\n    },\n    {\n      id: 'achievement-002',\n      title: 'First Trial Application',\n      description: 'Apply for your first clinical trial.',\n      completed: true,\n      pointsAwarded: 100,\n      dateCompleted: '2023-05-15'\n    },\n    {\n      id: 'achievement-003',\n      title: 'Health Data Sharing',\n      description: 'Share your health data with a trial team.',\n      completed: true,\n      pointsAwarded: 75,\n      dateCompleted: '2023-05-20'\n    },\n    {\n      id: 'achievement-004',\n      title: 'Screening Completion',\n      description: 'Complete the screening process for a clinical trial.',\n      completed: true,\n      pointsAwarded: 125,\n      dateCompleted: '2023-05-25'\n    },\n    {\n      id: 'achievement-005',\n      title: 'Educational Resources',\n      description: 'Read 5 educational resources about clinical trials.',\n      completed: true,\n      pointsAwarded: 100,\n      dateCompleted: '2023-06-01'\n    },\n    {\n      id: 'achievement-006',\n      title: 'Trial Participation',\n      description: 'Participate in a clinical trial for at least 1 month.',\n      completed: false,\n      pointsAwarded: 200\n    },\n    {\n      id: 'achievement-007',\n      title: 'Feedback Submission',\n      description: 'Submit feedback on your trial experience.',\n      completed: false,\n      pointsAwarded: 75\n    },\n    {\n      id: 'achievement-008',\n      title: 'Referral Program',\n      description: 'Refer a friend who signs up for the platform.',\n      completed: false,\n      pointsAwarded: 150\n    }\n  ];\n\n  // Filter rewards by type\n  const medicalRewards = rewards.filter(reward => reward.type === 'medical');\n  const financialRewards = rewards.filter(reward => reward.type === 'financial');\n  const serviceRewards = rewards.filter(reward => reward.type === 'service');\n\n  // Filter achievements by completion status\n  const completedAchievements = achievements.filter(achievement => achievement.completed);\n  const pendingAchievements = achievements.filter(achievement => !achievement.completed);\n\n  const renderRewardItem = (reward: Reward) => (\n    <List.Item\n      key={reward.id}\n      onClick={() => showRewardDetails(reward)}\n      style={{ cursor: 'pointer' }}\n    >\n      <Card hoverable>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n          <div>\n            <div style={{ display: 'flex', alignItems: 'center', marginBottom: 8 }}>\n              {reward.type === 'medical' ? (\n                <MedicineBoxOutlined style={{ fontSize: 24, color: '#1890ff', marginRight: 8 }} />\n              ) : reward.type === 'financial' ? (\n                <DollarOutlined style={{ fontSize: 24, color: '#52c41a', marginRight: 8 }} />\n              ) : (\n                <HeartOutlined style={{ fontSize: 24, color: '#722ed1', marginRight: 8 }} />\n              )}\n              <Title level={5} style={{ margin: 0 }}>{reward.title}</Title>\n            </div>\n            <Paragraph>{reward.description}</Paragraph>\n            <Text type=\"secondary\">Expires: {reward.expiryDate}</Text>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <Statistic \n              value={reward.pointsRequired} \n              suffix=\"pts\" \n              valueStyle={{ color: userPoints >= reward.pointsRequired ? '#52c41a' : '#ff4d4f' }}\n            />\n            <Button \n              type=\"primary\" \n              size=\"small\"\n              disabled={userPoints < reward.pointsRequired}\n            >\n              Redeem\n            </Button>\n          </div>\n        </div>\n      </Card>\n    </List.Item>\n  );\n\n  const renderAchievementItem = (achievement: Achievement) => (\n    <List.Item>\n      <Card>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n          <div>\n            <div style={{ display: 'flex', alignItems: 'center', marginBottom: 8 }}>\n              <TrophyOutlined style={{ fontSize: 24, color: achievement.completed ? '#faad14' : '#d9d9d9', marginRight: 8 }} />\n              <Title level={5} style={{ margin: 0 }}>{achievement.title}</Title>\n            </div>\n            <Paragraph>{achievement.description}</Paragraph>\n            {achievement.completed && achievement.dateCompleted && (\n              <Text type=\"secondary\">Completed on: {achievement.dateCompleted}</Text>\n            )}\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <Statistic \n              value={achievement.pointsAwarded} \n              suffix=\"pts\" \n              valueStyle={{ color: achievement.completed ? '#52c41a' : '#8c8c8c' }}\n            />\n            {achievement.completed ? (\n              <Tag color=\"success\">Completed</Tag>\n            ) : (\n              <Tag color=\"default\">Pending</Tag>\n            )}\n          </div>\n        </div>\n      </Card>\n    </List.Item>\n  );\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <Row align=\"middle\" style={{ marginBottom: '24px' }}>\n        <Button \n          icon={<ArrowLeftOutlined />} \n          onClick={handleBackToDashboard}\n          style={{ marginRight: '16px' }}\n        >\n          Back\n        </Button>\n        <Title level={2} style={{ margin: 0 }}>\n          <GiftOutlined style={{ marginRight: 8 }} />\n          Rewards Program\n        </Title>\n      </Row>\n\n      <Row gutter={[16, 16]}>\n        <Col span={24} lg={8}>\n          <Card>\n            <div style={{ textAlign: 'center', marginBottom: 16 }}>\n              <Title level={4}>Your Progress</Title>\n              <div style={{ position: 'relative', width: 120, height: 120, margin: '0 auto' }}>\n                <Progress \n                  type=\"circle\" \n                  percent={Math.round((userPoints / nextLevelPoints) * 100)} \n                  format={() => `${userPoints} pts`}\n                  width={120}\n                />\n                <div \n                  style={{ \n                    position: 'absolute', \n                    top: -10, \n                    right: -10, \n                    background: '#1890ff', \n                    color: 'white', \n                    borderRadius: '50%', \n                    width: 40, \n                    height: 40, \n                    display: 'flex', \n                    justifyContent: 'center', \n                    alignItems: 'center',\n                    fontWeight: 'bold',\n                    fontSize: 18\n                  }}\n                >\n                  {userLevel}\n                </div>\n              </div>\n              <Paragraph style={{ marginTop: 16 }}>\n                <Text strong>{nextLevelPoints - userPoints}</Text> points until Level {userLevel + 1}\n              </Paragraph>\n            </div>\n\n            <Divider>Reward Levels</Divider>\n\n            <Steps direction=\"vertical\" current={userLevel - 1} size=\"small\">\n              <Step title=\"Level 1\" description=\"Basic rewards unlocked\" />\n              <Step title=\"Level 2\" description=\"Medical benefits unlocked\" />\n              <Step title=\"Level 3\" description=\"Premium rewards unlocked\" />\n              <Step title=\"Level 4\" description=\"VIP benefits unlocked\" />\n              <Step title=\"Level 5\" description=\"All rewards unlocked\" />\n            </Steps>\n\n            <Divider>Points Summary</Divider>\n\n            <div>\n              <Row>\n                <Col span={12}><Text>Available Points:</Text></Col>\n                <Col span={12} style={{ textAlign: 'right' }}><Text strong>{userPoints}</Text></Col>\n              </Row>\n              <Row>\n                <Col span={12}><Text>Total Earned:</Text></Col>\n                <Col span={12} style={{ textAlign: 'right' }}><Text strong>{totalPointsEarned}</Text></Col>\n              </Row>\n              <Row>\n                <Col span={12}><Text>Redeemed:</Text></Col>\n                <Col span={12} style={{ textAlign: 'right' }}><Text strong>{totalPointsEarned - userPoints}</Text></Col>\n              </Row>\n            </div>\n          </Card>\n        </Col>\n\n        <Col span={24} lg={16}>\n          <Tabs defaultActiveKey=\"rewards\">\n            <TabPane tab=\"Available Rewards\" key=\"rewards\">\n              <Alert\n                message=\"How Rewards Work\"\n                description=\"Earn points by participating in clinical trials, completing your profile, sharing health data, and more. Redeem your points for valuable rewards including medical benefits, financial incentives, and special services.\"\n                type=\"info\"\n                showIcon\n                style={{ marginBottom: 16 }}\n              />\n              \n              <Tabs defaultActiveKey=\"medical\">\n                <TabPane tab=\"Medical Benefits\" key=\"medical\">\n                  <List\n                    grid={{ gutter: 16, xs: 1, sm: 1, md: 2, lg: 2, xl: 3, xxl: 3 }}\n                    dataSource={medicalRewards}\n                    renderItem={renderRewardItem}\n                  />\n                </TabPane>\n                <TabPane tab=\"Financial Rewards\" key=\"financial\">\n                  <List\n                    grid={{ gutter: 16, xs: 1, sm: 1, md: 2, lg: 2, xl: 3, xxl: 3 }}\n                    dataSource={financialRewards}\n                    renderItem={renderRewardItem}\n                  />\n                </TabPane>\n                <TabPane tab=\"Services\" key=\"services\">\n                  <List\n                    grid={{ gutter: 16, xs: 1, sm: 1, md: 2, lg: 2, xl: 3, xxl: 3 }}\n                    dataSource={serviceRewards}\n                    renderItem={renderRewardItem}\n                  />\n                </TabPane>\n              </Tabs>\n            </TabPane>\n            \n            <TabPane tab=\"Achievements\" key=\"achievements\">\n              <Alert\n                message=\"Earn Points Through Achievements\"\n                description=\"Complete these achievements to earn points that can be redeemed for rewards. Each achievement represents an important milestone in your clinical trial journey.\"\n                type=\"info\"\n                showIcon\n                style={{ marginBottom: 16 }}\n              />\n              \n              <Tabs defaultActiveKey=\"pending\">\n                <TabPane tab=\"Pending Achievements\" key=\"pending\">\n                  <List\n                    grid={{ gutter: 16, xs: 1, sm: 1, md: 2, lg: 2, xl: 2, xxl: 3 }}\n                    dataSource={pendingAchievements}\n                    renderItem={renderAchievementItem}\n                  />\n                </TabPane>\n                <TabPane tab=\"Completed Achievements\" key=\"completed\">\n                  <List\n                    grid={{ gutter: 16, xs: 1, sm: 1, md: 2, lg: 2, xl: 2, xxl: 3 }}\n                    dataSource={completedAchievements}\n                    renderItem={renderAchievementItem}\n                  />\n                </TabPane>\n              </Tabs>\n            </TabPane>\n          </Tabs>\n        </Col>\n      </Row>\n\n      <Modal\n        title={selectedReward?.title}\n        open={isModalVisible}\n        onCancel={handleModalClose}\n        footer={[\n          <Button key=\"cancel\" onClick={handleModalClose}>\n            Cancel\n          </Button>,\n          <Button\n            key=\"redeem\"\n            type=\"primary\"\n            loading={redeemLoading}\n            disabled={!selectedReward || userPoints < (selectedReward?.pointsRequired || 0)}\n            onClick={handleRedeemReward}\n          >\n            Redeem Reward\n          </Button>\n        ]}\n      >\n        {selectedReward && (\n          <>\n            <div style={{ display: 'flex', alignItems: 'center', marginBottom: 16 }}>\n              {selectedReward.type === 'medical' ? (\n                <MedicineBoxOutlined style={{ fontSize: 32, color: '#1890ff', marginRight: 16 }} />\n              ) : selectedReward.type === 'financial' ? (\n                <DollarOutlined style={{ fontSize: 32, color: '#52c41a', marginRight: 16 }} />\n              ) : (\n                <HeartOutlined style={{ fontSize: 32, color: '#722ed1', marginRight: 16 }} />\n              )}\n              <div>\n                <Title level={4} style={{ margin: 0 }}>{selectedReward.title}</Title>\n                <Tag color={selectedReward.type === 'medical' ? 'blue' : selectedReward.type === 'financial' ? 'green' : 'purple'}>\n                  {selectedReward.type.charAt(0).toUpperCase() + selectedReward.type.slice(1)}\n                </Tag>\n              </div>\n            </div>\n            \n            <Paragraph>{selectedReward.description}</Paragraph>\n            \n            <Divider />\n            \n            <Row gutter={16}>\n              <Col span={12}>\n                <Statistic \n                  title=\"Points Required\" \n                  value={selectedReward.pointsRequired} \n                  suffix=\"pts\"\n                  valueStyle={{ color: userPoints >= selectedReward.pointsRequired ? '#52c41a' : '#ff4d4f' }}\n                />\n              </Col>\n              <Col span={12}>\n                <Statistic \n                  title=\"Your Points\" \n                  value={userPoints} \n                  suffix=\"pts\"\n                />\n              </Col>\n            </Row>\n            \n            <Divider />\n            \n            <div>\n              <Text strong>Expiry Date:</Text> {selectedReward.expiryDate}\n            </div>\n            \n            {userPoints < selectedReward.pointsRequired && (\n              <Alert\n                message={`You need ${selectedReward.pointsRequired - userPoints} more points to redeem this reward`}\n                type=\"warning\"\n                showIcon\n                style={{ marginTop: 16 }}\n              />\n            )}\n          </>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default RewardMechanism;"],"names":["Title","Text","Paragraph","Typography","TabPane","Tabs","Step","Steps","RewardMechanism","navigate","useNavigate","currentUser","authService","getCurrentUser","userPoints","setUserPoints","useState","isModalVisible","setIsModalVisible","selectedReward","setSelectedReward","redeemLoading","setRedeemLoading","useEffect","role","handleModalClose","rewards","id","title","description","type","pointsRequired","available","expiryDate","achievements","completed","pointsAwarded","dateCompleted","medicalRewards","filter","reward","financialRewards","serviceRewards","completedAchievements","achievement","pendingAchievements","renderRewardItem","jsxRuntimeExports","jsx","List","Item","onClick","showRewardDetails","style","cursor","children","Card","hoverable","display","justifyContent","alignItems","jsxs","marginBottom","MedicineBoxOutlined","fontSize","color","marginRight","DollarOutlined","HeartOutlined","level","margin","textAlign","Statistic","value","suffix","valueStyle","Button","size","disabled","renderAchievementItem","TrophyOutlined","Tag","padding","Row","align","icon","ArrowLeftOutlined","GiftOutlined","gutter","Col","span","lg","position","width","height","Progress","percent","Math","round","format","top","right","background","borderRadius","fontWeight","marginTop","strong","userLevel","Divider","direction","current","defaultActiveKey","tab","Alert","message","showIcon","grid","xs","sm","md","xl","xxl","dataSource","renderItem","Modal","open","onCancel","footer","loading","async","Promise","resolve","setTimeout","prev","error","Fragment","charAt","toUpperCase","slice"],"mappings":"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"}