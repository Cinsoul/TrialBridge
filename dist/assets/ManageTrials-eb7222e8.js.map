{"version":3,"file":"ManageTrials-eb7222e8.js","sources":["../../src/pages/trial-team/ManageTrials.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Button, Row, Col, Table, Tag, Space, Modal, Form, Input, Select, message } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowLeftOutlined, PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { authService } from '../../services/authService';\nimport { trialService } from '../../services/trialService';\nimport type { Trial } from '../../services/trialService';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst ManageTrials: React.FC = () => {\n  const navigate = useNavigate();\n  const currentUser = authService.getCurrentUser();\n  const [trials, setTrials] = useState<Trial[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [editingTrial, setEditingTrial] = useState<Trial | null>(null);\n  const [form] = Form.useForm();\n\n  // Check if user is logged in\n  useEffect(() => {\n    if (!currentUser || currentUser.role !== 'trialTeam') {\n      navigate('/trial-team/login');\n    }\n  }, [currentUser, navigate]);\n\n  // Fetch trials data\n  useEffect(() => {\n    const fetchTrials = async () => {\n      try {\n        const response = await trialService.getAllTrials();\n        if (response.success) {\n          setTrials(response.trials);\n        } else {\n          message.error('Failed to load clinical trials');\n        }\n      } catch (error) {\n        console.error('Error fetching trials:', error);\n        message.error('An error occurred while loading trials');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrials();\n  }, []);\n\n  const handleBackToDashboard = () => {\n    navigate('/trial-team/dashboard');\n  };\n\n  const showAddModal = () => {\n    setEditingTrial(null);\n    form.resetFields();\n    setIsModalVisible(true);\n  };\n\n  const showEditModal = (trial: Trial) => {\n    setEditingTrial(trial);\n    form.setFieldsValue({\n      title: trial.title,\n      description: trial.description,\n      status: trial.status,\n      location: trial.location,\n      startDate: trial.startDate,\n      endDate: trial.endDate,\n      compensation: trial.compensation,\n      contactEmail: trial.contactEmail,\n      contactPhone: trial.contactPhone,\n    });\n    setIsModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleSave = async () => {\n    try {\n      await form.validateFields();\n      \n      if (editingTrial) {\n        // Update existing trial\n        // In a real app, this would call an API\n        message.success('Trial updated successfully!');\n      } else {\n        // Create new trial\n        // In a real app, this would call an API\n        message.success('Trial created successfully!');\n      }\n      \n      setIsModalVisible(false);\n      \n      // Refresh trials list\n      // In a real app, this would be handled by the API response\n      const response = await trialService.getAllTrials();\n      if (response.success) {\n        setTrials(response.trials);\n      }\n    } catch (error) {\n      console.error('Form validation error:', error);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      // In a real app, this would call an API to delete the trial\n      message.success('Trial deleted successfully!');\n      \n      // Refresh trials list\n      const response = await trialService.getAllTrials();\n      if (response.success) {\n        setTrials(response.trials);\n      }\n    } catch (error) {\n      console.error('Error deleting trial:', error);\n      message.error('Failed to delete trial');\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'recruiting':\n        return 'green';\n      case 'active':\n        return 'blue';\n      case 'completed':\n        return 'gray';\n      default:\n        return 'default';\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Title',\n      dataIndex: 'title',\n      key: 'title',\n      render: (text: string, record: Trial) => <a onClick={() => showEditModal(record)}>{text}</a>,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status: string) => (\n        <Tag color={getStatusColor(status)}>\n          {status.charAt(0).toUpperCase() + status.slice(1)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Location',\n      dataIndex: 'location',\n      key: 'location',\n    },\n    {\n      title: 'Start Date',\n      dataIndex: 'startDate',\n      key: 'startDate',\n    },\n    {\n      title: 'End Date',\n      dataIndex: 'endDate',\n      key: 'endDate',\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_: any, record: Trial) => (\n        <Space size=\"middle\">\n          <Button \n            icon={<EditOutlined />} \n            onClick={() => showEditModal(record)}\n          >\n            Edit\n          </Button>\n          <Button \n            danger \n            icon={<DeleteOutlined />} \n            onClick={() => handleDelete()}\n          >\n            Delete\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div style={{ padding: '24px' }}>\n      <Row align=\"middle\" style={{ marginBottom: '24px' }}>\n        <Button \n          icon={<ArrowLeftOutlined />} \n          onClick={handleBackToDashboard}\n          style={{ marginRight: '16px' }}\n        >\n          Back\n        </Button>\n        <Title level={2} style={{ margin: 0 }}>Manage Clinical Trials</Title>\n      </Row>\n\n      <Row justify=\"end\" style={{ marginBottom: '16px' }}>\n        <Button \n          type=\"primary\" \n          icon={<PlusOutlined />} \n          onClick={showAddModal}\n        >\n          Add New Trial\n        </Button>\n      </Row>\n\n      <Table \n        columns={columns} \n        dataSource={trials} \n        rowKey=\"id\" \n        loading={loading}\n      />\n\n      <Modal\n        title={editingTrial ? 'Edit Trial' : 'Add New Trial'}\n        open={isModalVisible}\n        onOk={handleSave}\n        onCancel={handleCancel}\n        confirmLoading={loading}\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n        >\n          <Row gutter={16}>\n            <Col span={24}>\n              <Form.Item\n                name=\"title\"\n                label=\"Trial Title\"\n                rules={[{ required: true, message: 'Please enter trial title' }]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item\n            name=\"description\"\n            label=\"Description\"\n            rules={[{ required: true, message: 'Please enter trial description' }]}\n          >\n            <TextArea rows={4} />\n          </Form.Item>\n\n          <Row gutter={16}>\n            <Col span={8}>\n              <Form.Item\n                name=\"status\"\n                label=\"Status\"\n                rules={[{ required: true, message: 'Please select status' }]}\n              >\n                <Select>\n                  <Option value=\"recruiting\">Recruiting</Option>\n                  <Option value=\"active\">Active</Option>\n                  <Option value=\"completed\">Completed</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={16}>\n              <Form.Item\n                name=\"location\"\n                label=\"Location\"\n                rules={[{ required: true, message: 'Please enter location' }]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"startDate\"\n                label=\"Start Date\"\n                rules={[{ required: true, message: 'Please enter start date' }]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"endDate\"\n                label=\"End Date\"\n                rules={[{ required: true, message: 'Please enter end date' }]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item\n            name=\"compensation\"\n            label=\"Compensation\"\n            rules={[{ required: true, message: 'Please enter compensation details' }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"contactEmail\"\n                label=\"Contact Email\"\n                rules={[{ required: true, message: 'Please enter contact email' }]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"contactPhone\"\n                label=\"Contact Phone\"\n                rules={[{ required: true, message: 'Please enter contact phone' }]}\n              >\n                <Input />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ManageTrials;"],"names":["Title","Typography","Option","Select","TextArea","Input","ManageTrials","navigate","useNavigate","currentUser","authService","getCurrentUser","trials","setTrials","useState","loading","setLoading","isModalVisible","setIsModalVisible","editingTrial","setEditingTrial","form","Form","useForm","useEffect","role","async","response","trialService","getAllTrials","success","message","error","showEditModal","trial","setFieldsValue","title","description","status","location","startDate","endDate","compensation","contactEmail","contactPhone","getStatusColor","columns","dataIndex","key","render","text","record","jsx","onClick","children","Tag","color","charAt","toUpperCase","slice","_","jsxs","Space","size","jsxRuntimeExports","Button","icon","EditOutlined","danger","DeleteOutlined","handleDelete","style","padding","Row","align","marginBottom","ArrowLeftOutlined","marginRight","level","margin","justify","type","PlusOutlined","resetFields","Table","dataSource","rowKey","Modal","open","onOk","validateFields","onCancel","confirmLoading","layout","gutter","Col","span","Item","name","label","rules","required","rows","value"],"mappings":"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"}